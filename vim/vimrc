set nocompatible  " disable vi compatibility
set shiftwidth=4  " Use 4 spaces for indentation
set softtabstop=4 " Use 4 spaces for soft tab
set tabstop=4     " Use 4 spaces for tab
set expandtab     " Expand tab to spaces
set number        " Enable line numbers
set cursorline    " Highlight current line
set nostartofline " Don’t reset cursor to start of line when moving around.
set nowrap        " No line wrapping
set hidden        " Allow hidden buffers

set backspace=indent,eol,start " Backspace through everything in INSERT mode
set ttyfast                    " Optimize for fast terminal connections
set encoding=utf-8 nobomb      " Use UTF-8 without BOM

"
" Show 'invisible' characters
set list
" Set characters used to indicate 'invisible' characters
set listchars=tab:▸\
set listchars+=trail:·
set listchars+=nbsp:_

" Centralize backups, swapfiles and undo history
set backupdir=~/.vim/backups
set directory=~/.vim/swaps

if exists("&undodir")
    set undodir=~/.vim/undo
endif

" !silent is used to suppress error messages if the config line
" references plugins/colorschemes that might be missing

" Call pathogen plugin management
silent! runtime bundle/pathogen/autoload/pathogen.vim
silent! call pathogen#infect()

" Set 256 color terminal support
set t_Co=256

" 10.7+ Terminal.app workaround
if $TERM_PROGRAM == 'Apple_Terminal' || $TERM_PROGRAM == 'iTerm.app'
    let g:solarized_termcolors = &t_Co
    let g:solarized_termtrans = 1
endif

" Disable solarized menu
let g:solarized_menu = 0

" Set colorscheme
set background=dark
silent! colorscheme solarized

if has("autocmd")
    " Load files for specific filetypes
    filetype on
    filetype indent on
    filetype plugin on
endif

if has("syntax")
    " Enable syntax highlighting
    syntax enable
endif


if has('cmdline_info')
    " Show the cursor line and column number
    set ruler
    " Show partial commands in status line
    set showcmd
    " Show whether in insert or replace mode
    set showmode
endif

if has('statusline') && has('python')
    source ~/.jachymko/vim/powerline/powerline/ext/vim/source_plugin.vim
endif

if has('wildmenu')
    " Show a list of possible completions
    set wildmenu
    " Tab autocomplete longest possible part of a string, then list
    set wildmode=longest,list
    if has ('wildignore')
        set wildignore+=*.a,*.o
        set wildignore+=*.bmp,*.gif,*.ico,*.jpg,*.png
        set wildignore+=.DS_Store,.git,.hg,.svn
        set wildignore+=*~,*.swp,*.tmp
    endif
endif

if has('extra_search')
    " Highlight searches [use :noh to clear]
    set hlsearch
    " Highlight dynamically as pattern is typed
    set incsearch
    " Ignore case of searches...
    set ignorecase
    " ...unless has mixed case
    set smartcase
endif

" C-Tab, C-S-Tab for buffer switching
inoremap <C-Tab>   <Esc>:bnext<CR>
inoremap <C-S-Tab> <Esc>:bprev<CR>

noremap <C-Tab>   :bnext<CR>
noremap <C-S-Tab> :bprev<CR>

" F1 and Esc get me out of insert mode, but I can still use F1 to start (and quit) help in other modes.
inoremap <F1> <Esc>
noremap <F1> :call MapF1()<CR>

function! MapF1()
  if &buftype == "help"
    exec 'quit'
  else
    exec 'help'
  endif
endfunction

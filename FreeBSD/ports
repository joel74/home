#!/bin/sh

## ports daemonik
##     Installs all ports specified under ./ports.d and ./host-daemonik/ports.d
##
## ports ports.d/devel/git [ targets ]
##     Installs devel/git using options specified in ports.d/devel/git file.
##     Default targets are: rmconfig fetch-recursive install clean.

# ============================================================================================
# Configuration
# ============================================================================================

export TARGETS=${TARGETS-fetch-recursive rmconfig install clean} # targets to be made on ports
export PORTSDIR=${PORTSDIR-/usr/ports}                           # where the port repository lives

# ============================================================================================
# Constants
# ============================================================================================

EARG=1
EPORTSNAP=2
EPORTMASTER=3
EMAKE=4
BREAK_XARGS_LOOP=255

SELFDIR=$(cd -- $(dirname $0) && pwd -P) # path to the directory containing this script
   SELF=$SELFDIR/$(basename $0)          # full path to this script

# ============================================================================================
# Validation
# ============================================================================================

if [ -z "$1" ]; then
    grep '^##' $0 | cut -c 4- >&2
    exit $EARG
fi

if [ $(id -u) -ne 0 ]; then
    echo Must be root >&2
    exit $EARG
fi

# ============================================================================================
# $1 = port file path
# ============================================================================================

if [ -f "$1" ]; then

       portdir=$(cd -- $(dirname $1) && pwd)
      portname=$(basename $portdir)/$(basename $1)
    portconfig=$(cat $1)

    if [ ! -d "$PORTSDIR/$portname" ]; then
        echo port $portname not found in $PORTSDIR >&2
        exit $EARG
    fi

    shift
    if [ -n "$1" ]; then
        TARGETS=$*
    fi

    if (echo $TARGETS | grep -q -w install) && [ -x "$(which pkg-static)" ]; then
        local pkgname=$(make -C $PORTSDIR/$portname package-name | awk -F- '{$NF=""; OFS="-"; NF=NF-1; print $0}')

        if pkg-static info $pkgname >/dev/null 2>&1; then
            echo $pkgname already installed, skipping
            exit 0
        fi
    fi

    make -C $PORTSDIR/$portname -DBATCH $portconfig $TARGETS || exit $BREAK_XARGS_LOOP

# ============================================================================================
# $1 = host name
# ============================================================================================

elif [ -d "$SELFDIR/host-$1" ]; then

    do_target() {
        find $1 -type f         \
                -not -name '.*' \
                -print0         \
        | xargs -I{} -0 sh -c "$SELF {} $2" || exit $EMAKE
    }

    portsnap fetch || exit $EPORTSNAP

    if ! portsnap update 2>/dev/null; then
        portsnap extract update || exit $EPORTSNAP
    fi

    for tgt in $TARGETS; do
        for dir in $SELFDIR/ports.d $SELFDIR/host-$1/ports.d; do
            if [ -d "$dir" ]; then
                do_target $dir $tgt
            fi
        done
    done

    if [ -x "$(which portmaster)" ]; then
        portmaster -a || exit $EPORTMASTER
    fi

else
    echo not a known host or port: $1 >&2
    exit $EARG
fi

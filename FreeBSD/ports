#!/bin/sh

## ports daemonik
##     Installs all ports specified under ./ports.d and ./host-daemonik/ports.d
##
## ports ports.d/devel/git [ targets ]
##     Installs devel/git using options specified in ports.d/devel/git file.
##     When no targets specified, makes install clean.

# ============================================================================================
# Configuration
# ============================================================================================

 TARGETS=${TARGETS-fetch-recursive install clean} # targets to be made on ports
PORTSDIR=${PORTSDIR-/usr/ports}                   # where the port repository lives

# ============================================================================================
# Constants
# ============================================================================================

EARG=1
EPORTSNAP=2
EMAKE=3
BREAK_XARGS_LOOP=255

SELFDIR=$(cd -- $(dirname $0) && pwd -P) # path to the directory containing this script
   SELF=$SELFDIR/$(basename $0)         # full path to this script

# ============================================================================================
# Validation
# ============================================================================================

if [ `id -u` != 0 ]; then
    echo Must be root >&2
    exit $EARG
fi

if [ -z "$1" ]; then
    cat $0 | grep '^##' | cut -c 4- >&2
    exit $EARG
fi

# ============================================================================================
# $1 = port file path
# ============================================================================================

if [ -f "$1" ]; then
    if ! [ -d "$PORTSDIR/$portname" ]; then
        echo port $portname not found in $PORTSDIR >&2
        exit $EARG
    fi

    portname=$(echo $1 | awk -F/ '{print $(NF-1) "/" $NF}')
    portconfig=$(cat $1)

    shift
    if ! [ -z "$1" ]; then
        TARGETS=$*
    fi

    echo make -C $PORTSDIR/$portname -DBATCH $portconfig $TARGETS || exit $BREAK_XARGS_LOOP
    exit 0
fi

# ============================================================================================
# $1 = host name
# ============================================================================================

portsnap fetch || exit $EPORTSNAP

if ! portsnap update 2>/dev/null; then
    portsnap extract update || exit $EPORTSNAP
fi

for dir in $SELFDIR/ports.d $SELFDIR/host-$1/ports.d; do
    if [ -d "$dir" ]; then
        for tgt in $TARGETS; do
            find $dir -type f -not -name '.*' -print0 | xargs -I{} -0 sh -c "$SELF {} $tgt" || exit $EMAKE
        done
    fi
done

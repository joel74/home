ext_if   = "vtnet0"

jail_if  = "lo1"
jail_net = "10.186.211/24"

vpn      = "10.186.211.2"
bt       = "10.186.211.3"

vpn_if   = "{ tun0 tun1 }"
vpn_net  = "{ 10.186.212/24 10.186.213/24 }"

set skip on lo0
set block-policy return

scrub on $ext_if reassemble tcp

############################################
# TRANSLATION
############################################

nat from $jail_net -> ($ext_if:0)
nat from $vpn_net  -> ($ext_if:0)

rdr pass on $ext_if proto tcp to ($ext_if) port 9091    -> $bt
rdr pass on $ext_if proto tcp to ($ext_if) port 37157   -> ($ext_if:0) port ssh

rdr pass on $ext_if proto tcp to ($ext_if) port 51413   -> $bt
rdr pass on $ext_if proto udp to ($ext_if) port 51413   -> $bt

rdr pass on $ext_if proto tcp to ($ext_if) port https   -> $vpn port openvpn
rdr pass on $ext_if proto udp to ($ext_if) port openvpn -> $vpn

############################################
# FILTERING
############################################

table <private>   const { 10/8 172.16/12 192.168/16 }
table <multicast> const { $ext_if:broadcast 224/4 255.255.255.255 }
udp_noise = "{" \
    mdns        \
    netbios-ns  \
    netbios-dgm \
    netbios-ssn \
    1947        \
    5355        \
    17500       \
"}"

# block drop and don't log multicasts on the external interface
block in drop quick on $ext_if to <multicast>
block in drop quick on $ext_if proto igmp

# block drop and don't log various UDP noise
block in drop quick on $ext_if proto udp to port $udp_noise

# block drop incoming packets from impossible addresses
block in drop log quick on $ext_if from <private>
block in drop log quick on $ext_if from no-route
block in drop log quick on $ext_if from urpf-failed

# don't log and return ICMP UNRECHABLE, probably BitTorrent peers
block in return quick on $ext_if proto udp to port >= 49152

# allow pings
pass in quick proto icmp icmp-type echoreq

# allow jail and vpn traffic
pass in quick on $jail_if
pass in quick on $vpn_if

pass out keep state
block in log

#!/bin/sh

errex() {
    if [ "$1" ]; then
        echo $1 >&2
    fi
    exit 1
}

usage() {
    echo "
usage: $0 command args ...
where 'command' is one of the following:

    new [ -r <root> ] [ -t <template> ] <jail>
    template [ -r <root> ] [ -t <base> ]
    mount packages <jail>
    umount packages <jail>

default root is \"/var/jail\"
default jail base is \"default\"
" >&2
    exit 1
}

zfs_ensure_dataset() {
    local dataset
    dataset=${ZROOT}${1}; shift

    if ! zfs list $dataset >/dev/null 2>&1; then
        echo creating $dataset
        zfs create $* $dataset || errex "failed to create $dataset dataset."
    fi
}

zfs_create_snapshot() {
    local dataset
    dataset=${ZROOT}${1}

    zfs snapshot "${dataset}@${2}" || errex "failed to create $2 snapshot."
}

zfs_create_clone() {
    local dataset mountpoint snapshot
    dataset="${ZROOT}${1}"
    snapshot="${dataset}@${2}"
    mountpoint="${ZROOT}${3}"

    zfs_create_snapshot ${1} ${2}
    zfs clone ${snapshot} ${mountpoint} || errex "failed to clone ${snapshot}."
}

zfs_destroy_clone() {
    local clone snapshot
    snapshot="${ZROOT}${1}@${2}"
    clone="${ZROOT}${3}"

    if zfs list ${clone} >/dev/null 2>&1; then
        zfs destroy -r ${clone} || errex "failed to destroy ${clone}"
    fi

    if zfs list ${snapshot} >/dev/null 2>&1; then
        zfs destroy ${snapshot} || errex "failed to destroy ${snapshot}"
    fi
}

zfs_get_pool() {
    local dir result

    dir=${1}
    result=""

    while [ ! "${result}"     -a \
              "${dir}" != "." -a \
              "${dir}" != "/" ]; do
        result=`zfs list -H -o name ${dir} 2>/dev/null | awk -F/ '{print $1}'`
        dir=`dirname ${dir}`
    done

    echo $result
}

is_jail_running() {
    [ -e "/var/run/jail_${1}.id" ]
}

ocjail_root() {
    echo "${JAILS}/${1}"
}

ocjail_private() {
    echo "${JAILS}/${1}.private"
}

ocjail_ensure_dir() {
    [ -d ${1} ] || errex "directory ${1} doesn't exist"
}

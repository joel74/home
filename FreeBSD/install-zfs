#!/bin/sh

# 1. Create the necessary partitions on the disk(s) and add ZFS aware boot code.
#
#       gpart create -s gpt ada0
#       gpart add -t freebsd-boot -s 94 ada0
#       gpart add -t freebsd-zfs -l disk0 ada0
#       gpart bootcode -b/boot/pmbr -p/boot/gptzfsboot -i 1 ada0
#
# 2. Create the pool
#
#       zpool create -m /mnt zroot /dev/gpt/disk0
#
# 3. Run this script
#
#       fetch -o - https://raw.github.com/jachymko/home/master/FreeBSD/install-zfs | sh

if [ `id -u` != 0 ]; then
    echo Must be root
    exit 1
fi

ZROOT=zroot
SWAP=4G
DESTDIR=/mnt
COMPRESS_ALG=lz4

# Test if $ZROOT exists
zpool status $ZROOT >/dev/null || exit $?

# Try to enable lz4 compression
if [ "$COMPRESS_ALG" = "lz4" ]; then
    zpool set lz4_compress=enabled $ZROOT 2>/dev/null || COMPRESS_ALG=on
fi

if [ "$COMPRESS_ALG" = "lz4" ]; then
    echo "LZ4 compression enabled."
fi

# Make sure $ZROOT is mounted on $DESTDIR
zfs set mountpoint=$DESTDIR $ZROOT

# Set $ZROOT as bootable
zpool set bootfs=$ZROOT $ZROOT

# Import $ZROOT using known cache file--will be copied to
# the $DESTDIR/boot when done.
zpool export $ZROOT; zpool import -o cachefile=/var/tmp/zpool.cache $ZROOT

# Swap, maybe?
if [ $SWAP ]; then
    zfs create -V $SWAP $ZROOT/swap
    zfs set org.freebsd:swap=on $ZROOT/swap
    zfs set checksum=off $ZROOT/swap
fi

mkzfs() {
    echo "zfs create $*" ; zfs create $*
}

mkzfs -o exec=on  -o setuid=off -o compression=$COMPRESS $ZROOT/tmp
mkzfs -o exec=on  -o setuid=on  -o compression=off       $ZROOT/usr
mkzfs -o exec=on  -o setuid=on  -o compression=off       $ZROOT/usr/home
mkzfs -o exec=on  -o setuid=off -o compression=$COMPRESS $ZROOT/usr/ports
mkzfs -o exec=off -o setuid=off -o compression=off       $ZROOT/usr/ports/distfiles
mkzfs -o exec=off -o setuid=off -o compression=off       $ZROOT/usr/ports/packages
mkzfs -o exec=off -o setuid=off -o compression=$COMPRESS $ZROOT/usr/src
mkzfs -o exec=off -o setuid=off -o compression=off       $ZROOT/var
mkzfs -o exec=off -o setuid=off -o compression=$COMPRESS $ZROOT/var/crash
mkzfs -o exec=off -o setuid=off -o compression=$COMPRESS $ZROOT/var/db
mkzfs -o exec=on  -o setuid=off -o compression=$COMPRESS $ZROOT/var/db/pkg
mkzfs -o exec=off -o setuid=off -o compression=off       $ZROOT/var/empty
mkzfs -o exec=off -o setuid=off -o compression=$COMPRESS $ZROOT/var/log
mkzfs -o exec=off -o setuid=off -o compression=$COMPRESS $ZROOT/var/mail
mkzfs -o exec=off -o setuid=off -o compression=off       $ZROOT/var/run
mkzfs -o exec=on  -o setuid=off -o compression=$COMPRESS $ZROOT/var/tmp

# Unprivileged user may not delete or rename files of other users in temp directories.
chmod 1777 $DESTDIR/tmp
chmod 1777 $DESTDIR/var/tmp

# Link /usr/home to /home
cd $DESTDIR
ln -s usr/home home

cd /usr/freebsd-dist

# Install FreeBSD
for file in base.txz kernel.txz doc.txz src.txz; do
    echo "Extracting $file to $DESTDIR"
    cat $file | tar --unlink -xpJf - -C $DESTDIR
done

# Copy zpool.cache so the boot loader is able to locate the pool.
cp /var/tmp/zpool.cache $DESTDIR/boot/zfs/zpool.cache

# Enable ZFS in kernel and loader.
echo 'zfs_enable="YES"'                  >> $DESTDIR/etc/rc.conf
echo 'zfs_load="YES"'                    >> $DESTDIR/boot/loader.conf
echo "vfs.root.mountfrom=\"zfs:$ZROOT\"" >> $DESTDIR/boot/loader.conf

# Apparently an fstab file is required.
touch $DESTDIR/etc/fstab

zfs umount -af
zfs set mountpoint=legacy $ZROOT
zfs set mountpoint=/tmp   $ZROOT/tmp
zfs set mountpoint=/usr   $ZROOT/usr
zfs set mountpoint=/var   $ZROOT/var
zfs set readonly=on       $ZROOT/var/empty

echo "Ready to boot!"

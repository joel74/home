---
- name: directories
  tags: easyrsa
  sudo: yes
  file: dest={{ item }}
        state=directory
  with_items:
  - "{{ easyrsa_cadir }}"
  - "{{ easyrsa_keydir }}"

- name: vars
  tags: easyrsa
  sudo: yes
  template:
    dest={{ easyrsa_cadir | mandatory  }}/vars
    src=vars.j2

- name: index files
  tags: easyrsa
  sudo: yes
  copy:
    dest: "{{ easyrsa_keydir }}/{{ item.name }}"
    content: "{{ item.content|default('') }}"
    force: no
  with_items:
  - name: 'index.txt'
  - name: 'serial'
    content: '01'


- name: dh
  tags: easyrsa
  sudo: yes
  shell: >
    . {{ easyrsa_cadir  }}/vars &&
    {{ easyrsa_root }}/build-dh
  args:
    creates: "{{ easyrsa_keydir }}/dh1024.pem"

- name: ca cert
  tags: easyrsa
  sudo: yes
  shell: >
    . {{ easyrsa_cadir  }}/vars &&
    {{ easyrsa_root }}/pkitool --initca
  args:
    creates: "{{ easyrsa_keydir }}/ca.key"

- name: server certs
  tags: easyrsa
  sudo: yes
  shell: >
    . {{ easyrsa_cadir  }}/vars &&
    {{ easyrsa_root }}/pkitool --server {{ item }}
  args:
    creates: "{{ easyrsa_keydir }}/{{ item }}.key"
  with_items: easyrsa_server_certs

- name: client certs
  tags: easyrsa
  sudo: yes
  shell: >
    . {{ easyrsa_cadir  }}/vars &&
    {{ easyrsa_root }}/pkitool {{ item }}
  args:
    creates: "{{ easyrsa_keydir }}/{{ item }}.key"
  with_items: easyrsa_certs

- name: pkcs12 passphrase file
  tags: easyrsa
  sudo: yes
  copy:
    dest:    "{{ easyrsa_keydir }}/pkcs12.passphrase"
    content: "{{ easyrsa_pfx_pass }}"
    owner: root
    group: wheel
    mode: 0600

- name: client certs pkcs12
  tags: easyrsa
  sudo: yes
  command: >
    openssl pkcs12 -export -out      {{ easyrsa_keydir }}/{{ item }}.pfx
                           -inkey    {{ easyrsa_keydir }}/{{ item }}.key
                           -in       {{ easyrsa_keydir }}/{{ item }}.crt
                           -certfile {{ easyrsa_keydir }}/ca.crt
                           -passout  file:{{ easyrsa_keydir }}/pkcs12.passphrase
  args:
    creates: "{{ easyrsa_keydir }}/{{ item }}.pfx"
  with_items: easyrsa_certs

- name: client certs owner
  tags: easyrsa
  sudo: yes
  file:
    dest: "{{ easyrsa_keydir }}/{{ item[0] }}.{{ item[1] }}"
    owner: "{{ ansible_user_id }}"
    state: file
  with_nested:
  - easyrsa_certs
  - [ crt, pfx, key ]


---
- name: config directory
  tags: openvpn
  sudo: yes
  file:
    dest:  "{{ item }}"
    state: directory
  with_items:
  - /usr/local/etc/openvpn

- name: chroot directories
  tags: openvpn
  sudo: yes
  file:
    dest:  "{{ item[0].chroot }}{{ item[1].name }}"
    mode:  "{{ item[1].mode }}"
    state: directory
  when: item[0].chroot | default(false)
  with_nested:
  - openvpn_instances
  -
    - { name: '/',    mode:  '755' }
    - { name: '/tmp', mode: '1777' }

- name: link openvpn service instances
  tags: openvpn
  sudo: yes
  file:
    dest:  /usr/local/etc/rc.d/{{ item.name }}
    src:   /usr/local/etc/rc.d/openvpn
    state: link
  with_items: openvpn_instances
  when: item.name | default('openvpn') != 'openvpn'
  notify: openvpn services restarted

- name: ensure openvpn.confs
  tags: openvpn
  sudo: yes
  template:
    dest: /usr/local/etc/openvpn/{{ item.name }}.conf
    src:  ../../templates/openvpn.conf.j2
  with_items: openvpn_instances
  notify: openvpn services restarted

- name: tls-auth key
  tags: openvpn
  sudo: yes
  command: >
    /usr/local/sbin/openvpn
    --genkey
    --secret "/usr/local/etc/openvpn/{{ item.name | default('openvpn') }}.ta-key"
  args:
    creates: "/usr/local/etc/openvpn/{{ item.name | default('openvpn') }}.ta-key"
  with_items: openvpn_instances

- name: openvpn services enabled
  tags: openvpn
  sudo: yes
  copy:
    dest: /etc/rc.conf.d/{{ item.name }}
    content: "{{ item.name }}_enable=\"YES\""
  with_items: openvpn_instances

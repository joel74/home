---
- name: config directories
  tags: [ openvpn, openvpn-server ]
  sudo: yes
  file:
    dest:  "{{ item }}"
    state: directory
  with_items:
  - "{{ openvpn_etc }}"

- include: '../../tasks/chroot-dirs.yml'
  tags:    [ openvpn, openvpn-server ]

- name:   link openvpn service instance
  tags:   [ openvpn, openvpn-server ]
  sudo:   yes
  notify: openvpn restarted
  file:
    dest:  "/usr/local/etc/rc.d/{{ item }}"
    src:   "/usr/local/etc/rc.d/openvpn"
    state: link
  with_items:
  - "{{ openvpn.name | d(openvpn_name) }}"
  when: item != 'openvpn'

- name:   ensure openvpn.confs
  tags:   [ openvpn, openvpn-server ]
  sudo:   yes
  notify: openvpn restarted
  template:
    dest: "{{ openvpn_etc }}/{{ item }}.conf"
    src:  ../../templates/openvpn.conf.j2
  with_items:
  - "{{ openvpn.name | d(openvpn_name) }}"

- name:   ensure client configs
  tags:   [ openvpn, openvpn-server ]
  sudo:   yes
  notify: openvpn restarted
  copy:
    dest:    "{{ openvpn.chroot | d(openvpn_chroot) }}/{{ openvpn.ccd | d(openvpn_ccd) }}/{{ item.key }}"
    content: 'ifconfig-push {{ item.value.inet }} {{ item.value.inet_tunnel }}'
  with_dict: "openvpn.client_config | d(openvpn_client_config)"

- name: tls-auth key
  tags: [ openvpn, openvpn-server ]
  sudo: yes
  notify: openvpn restarted
  command: >
    /usr/local/sbin/openvpn
    --genkey
    --secret "/usr/local/etc/openvpn/{{ item }}.ta-key"
  args:
    creates: "/usr/local/etc/openvpn/{{ item }}.ta-key"
  with_items:
  - "{{ openvpn.name | d(openvpn_name) }}"

- name: openvpn services enabled
  tags: [ openvpn, openvpn-server ]
  sudo: yes
  copy:
    dest: /etc/rc.conf.d/{{ item }}
    content: '{{ item }}_enable="YES"'
  with_items:
  - "{{ openvpn.name | d(openvpn_name) }}"
